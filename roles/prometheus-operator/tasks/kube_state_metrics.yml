---
- name: Creating cluster role
  k8s_v1alpha1_cluster_role:
     state: '{{ state }}' 
     labels:
       k8s-app: kube-state-metrics 
     name: kube-state-metrics 
     rules: 
     - apiGroups: [""]
       resources:
       - nodes
       - pods
       - services
       - resourcequotas
       - replicationcontrollers
       - limitranges
       - persistentvolumeclaims
       verbs: ["list", "watch"]
     - apiGroups: ["extensions"]
       resources:
       - daemonsets
       - deployments
       - replicasets
       verbs: ["list", "watch"]
     - apiGroups: ["apps"]
       resources:
       - statefulsets
       verbs: ["list", "watch"]
     - apiGroups: ["batch"]
       resources:
       - cronjobs
       - jobs
       verbs: ["list", "watch"]
     
- name: Creating cluster role binding 
  k8s_v1alpha1_cluster_role_binding: 
    state: '{{ state }}'
    name: kube-state-metrics 
    labels:
      k8s-app: kube-state-metrics 
    role_ref_api_group: rbac.authorization.k8s.io
    role_ref_kind: ClusterRole
    role_ref_name: kube-state-metrics 
    subjects: 
    - kind: ServiceAccount
      name: kube-state-metrics 
      namespace: monitoring
    
- name: creating service account 
  k8s_v1_service_account: 
     state: '{{ state }}'
     name: kube-state-metrics 
     namespace: monitoring

- name: creating service 
  k8s_v1_service: 
    state: '{{ state }}'
    namespace: monitoring
    labels:
       app: kube-state-metrics
       k8s-app: kube-state-metrics
    name: kube-state-metrics 
    spec_ports:
    - name: http-metrics
      port: 8080
      targetPort: metrics
      protocol: TCP
    spec_selector:
      app: kube-state-metrics 


- name: Creating role
  k8s_v1beta1_role:
     name:  kube-state-metrics-resizer
     namespace: monitoring
     state: '{{ state }}' 
     rules: 
     - apiGroups: [""]
       resources:
       - pods
       verbs: ["get"]
     - apiGroups: ["extensions"]
       resources:
       - deployments
       resourceNames: ["kube-state-metrics"]
       verbs: ["get", "update"]

- name: creating role binding 
  k8s_v1beta1_role_binding: 
     name: kube-state-metrics
     namespace: monitoring
     state: '{{ state }}'
     role_ref_api_group: rbac.authorization.k8s.io
     role_ref_kind: Role
     role_ref_name: kube-state-metrics-resizer
     subjects:
     - kind: ServiceAccount
       name: kube-state-metrics

- name: Deployment 
  k8s_extensions_v1beta1_deployment:
     state: '{{ state }}' 
     name: kube-state-metrics 
     namespace: monitoring
     spec_template_metadata_labels:
       app: kube-state-metrics 
     spec_selector_match_labels:
       app: kube-state-metrics 
     spec_replicas: 1
     service_account_name: kube-state-metrics 
     containers:
     - name: kube-state-metrics 
       image: quay.io/coreos/kube-state-metrics:v1.0.1 
       ports: 
       - containerPort: 8080
         name: metrics
       resources:
         limits:
           cpu: 200m
           memory: 100Mi
         requests:
           cpu: 100m
           memory: 50Mi
       readiness_probe:
         http_get:
           path: /healthz
           port: 8080
         initial_delay_seconds: 5
         timeout_seconds: 5
     - name: addon-resizer
       image: gcr.io/google_containers/addon-resizer:1.0
       resources:
         limits:
           cpu: 200m
           memory: 100Mi
         requests:
           cpu: 100m
           memory: 50Mi
       env: 
         - name: MY_POD_NAME
           value_from: 
             field_ref: 
               field_path: metadata.name
         - name: MY_POD_NAMESPACE
           value_from:
             field_ref: 
               field_path: metadata.namespace
       command:
          - /pod_nanny
          - --container=kube-state-metrics
          - --cpu=100m
          - --extra-cpu=1m
          - --memory=100Mi
          - --extra-memory=2Mi
          - --threshold=5
          - --deployment=kube-state-metrics

